// Recursive search
// - saves each filename and path name only once

/*-- data structure -----------------------------
  
   use FileName = String
   use Size = Unsigned Int
   use Patterns = Vector<String>
   use Path = String
   use Paths = HashSet<Path>
   use File_Item = (FileName, Size, Path&)
   use Files = Vector<File_Item>
   use Store = struct { Files files, Paths paths }

  -- search processing --------------------------
  
  recursive_search(path, file_patterns) {
    store = Store::new()
    search(path, file_patterns, &store) {
      /*-- handle files --*/
      for each file in path {
        if file.ext in file_patterns {
          extract size
          real_time_display(size, file name, path)
          store.insert(name, size, path)
        }
      }
      /*-- handle subdirectories --*/
      for each dir in path {
        search(path + dir, file_patterns, &store)
      }
    }
    ordered_query(&store)
  }
-----------------------------------------------*/     